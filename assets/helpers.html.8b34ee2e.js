import{e as n}from"./app.39480b94.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u4E00\u4E9B\u5B9E\u7528\u7684\u5DE5\u5177\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E9B\u5B9E\u7528\u7684\u5DE5\u5177\u51FD\u6570" aria-hidden="true">#</a> \u4E00\u4E9B\u5B9E\u7528\u7684\u5DE5\u5177\u51FD\u6570</h1><h2 id="\u7528\u70B9\u5C55\u5E73\u591A\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7528\u70B9\u5C55\u5E73\u591A\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u7528\u70B9\u5C55\u5E73\u591A\u7EF4\u6570\u7EC4</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">array_dot</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">,</span> <span class="token variable">$prepend</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$results</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$array</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$results</span> <span class="token operator">=</span> <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$results</span><span class="token punctuation">,</span> <span class="token function">array_dot</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token variable">$prepend</span><span class="token operator">.</span><span class="token variable">$key</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token variable">$results</span><span class="token punctuation">[</span><span class="token variable">$prepend</span><span class="token operator">.</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token variable">$results</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u6309\u7167\u89C4\u5219\u5339\u914D\u6570\u7EC4\u4E2D\u7684\u952E" tabindex="-1"><a class="header-anchor" href="#\u6309\u7167\u89C4\u5219\u5339\u914D\u6570\u7EC4\u4E2D\u7684\u952E" aria-hidden="true">#</a> \u6309\u7167\u89C4\u5219\u5339\u914D\u6570\u7EC4\u4E2D\u7684\u952E</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">array_rule</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">,</span> <span class="token variable">$rule</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$results</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;\\*&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;[^\\.]*&#39;</span><span class="token punctuation">,</span> <span class="token function">preg_quote</span><span class="token punctuation">(</span><span class="token variable">$rule</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">array_dot</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$rule</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token variable">$rule</span> <span class="token operator">||</span> <span class="token class-name">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/^&#39;</span><span class="token operator">.</span><span class="token variable">$pattern</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;\\z/&#39;</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$results</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$key</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token variable">$results</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4F7F\u7528</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$users</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;users&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;aa&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bb&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">array_rule</span><span class="token punctuation">(</span><span class="token variable">$users</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.*.id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/*
array:2 [\u25BC
  0 =&gt; &quot;users.0.id&quot;
  1 =&gt; &quot;users.1.id&quot;
]
*/</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="\u5C06\u5B57\u7B26\u4E32\u8F6C\u4E3A-rgb-\u989C\u8272" tabindex="-1"><a class="header-anchor" href="#\u5C06\u5B57\u7B26\u4E32\u8F6C\u4E3A-rgb-\u989C\u8272" aria-hidden="true">#</a> \u5C06\u5B57\u7B26\u4E32\u8F6C\u4E3A RGB \u989C\u8272</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * \u83B7\u53D6\u4E00\u4E2A\u989C\u8272\u4EE3\u7801
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">string</span></span> <span class="token parameter">$string</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
 */</span>
<span class="token keyword">function</span> <span class="token function-definition function">getColor</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
<span class="token punctuation">{</span>
    <span class="token variable">$hash</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$h</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">base_convert</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$hash</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">128</span><span class="token punctuation">;</span>
    <span class="token variable">$s</span> <span class="token operator">=</span> <span class="token function">base_convert</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$hash</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$v</span> <span class="token operator">=</span> <span class="token function">base_convert</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$hash</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">convertYuv2Rgb</span><span class="token punctuation">(</span><span class="token variable">$h</span><span class="token punctuation">,</span> <span class="token variable">$s</span><span class="token punctuation">,</span> <span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * YUV \u989C\u8272\u8F6C RGB
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">int</span></span> <span class="token parameter">$y</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">int</span></span> <span class="token parameter">$u</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">int</span></span> <span class="token parameter">$v</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
 */</span>
<span class="token keyword">function</span> <span class="token function-definition function">convertYuv2Rgb</span><span class="token punctuation">(</span><span class="token keyword type-hint">int</span> <span class="token variable">$y</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$u</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
<span class="token punctuation">{</span>
    <span class="token variable">$rgb</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;R&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$y</span> <span class="token operator">+</span> <span class="token number">1.402</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token variable">$u</span> <span class="token operator">-</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;G&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$y</span> <span class="token operator">-</span> <span class="token number">0.34414</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token variable">$v</span> <span class="token operator">-</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.71414</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token variable">$u</span> <span class="token operator">-</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;B&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$y</span> <span class="token operator">+</span> <span class="token number">1.722</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token variable">$v</span> <span class="token operator">-</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$rgb</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$rgb</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$value</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token variable">$value</span> <span class="token operator">&gt;</span> <span class="token number">255</span> <span class="token operator">?</span> <span class="token number">255</span> <span class="token punctuation">:</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;#%02x%02x%02x&#39;</span><span class="token punctuation">,</span> <span class="token variable">$rgb</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;R&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$rgb</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;G&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$rgb</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;B&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">echo</span> <span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;hello&#39;</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;world&#39;</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div>`,9);function t(e,o){return p}var r=s(a,[["render",t]]);export{r as default};
