import{r as t,c as e,a as s,b as o,F as c,e as a,d as n,o as l}from"./app.39480b94.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r=a(`<h1 id="\u6253\u5305-composer-\u4F9D\u8D56\u4E3A-phar-\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u6253\u5305-composer-\u4F9D\u8D56\u4E3A-phar-\u6587\u4EF6" aria-hidden="true">#</a> \u6253\u5305 Composer \u4F9D\u8D56\u4E3A Phar \u6587\u4EF6</h1><h2 id="\u521B\u5EFA\u7A7A\u9879\u76EE" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u7A7A\u9879\u76EE" aria-hidden="true">#</a> \u521B\u5EFA\u7A7A\u9879\u76EE</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> my-project
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u5B89\u88C5\u6B32\u6253\u5305\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5\u6B32\u6253\u5305\u4F9D\u8D56" aria-hidden="true">#</a> \u5B89\u88C5\u6B32\u6253\u5305\u4F9D\u8D56</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> my-project
<span class="token function">composer</span> require guzzlehttp/guzzle
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u6DFB\u52A0-index-php-\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0-index-php-\u6587\u4EF6" aria-hidden="true">#</a> \u6DFB\u52A0 <code>index.php</code> \u6587\u4EF6</h2><p>\u5728\u9879\u76EE\u6839\u76EE\u5F55\u6DFB\u52A0 <code>index.php</code> \u6587\u4EF6\u7528\u4EE5\u52A0\u8F7D Composer \u7684 <code>autoload</code> \u4EE3\u7801\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">require</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/vendor/autoload.php&#39;</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u538B\u7F29\u6574\u4E2A\u9879\u76EE-\u53EF\u7701\u7565" tabindex="-1"><a class="header-anchor" href="#\u538B\u7F29\u6574\u4E2A\u9879\u76EE-\u53EF\u7701\u7565" aria-hidden="true">#</a> \u538B\u7F29\u6574\u4E2A\u9879\u76EE\uFF08\u53EF\u7701\u7565\uFF09</h2><p>\u7531\u4E8E\u76F4\u63A5\u6253\u5305\u51FA\u6765\u7684 phar \u6587\u4EF6\u8F83\u5927\uFF0C\u6240\u4EE5\u9700\u8981\u5BF9\u4E0B\u8F7D\u4E0B\u6765\u7684 Composer \u4F9D\u8D56\u5E93\u4EE3\u7801\u8FDB\u884C\u538B\u7F29\uFF0C\u5E76\u53BB\u9664\u6CE8\u91CA\u3001\u8BF4\u660E\u3001\u7248\u6743\u7B49\u6587\u4EF6\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">const</span> <span class="token constant">REMOVED_FILES</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string single-quoted-string">&#39;license&#39;</span><span class="token punctuation">,</span>
  <span class="token string single-quoted-string">&#39;makefile&#39;</span><span class="token punctuation">,</span>
  <span class="token string single-quoted-string">&#39;dockerfile&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token variable">$rii</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RecursiveIteratorIterator</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RecursiveDirectoryIterator</span><span class="token punctuation">(</span><span class="token variable">$argv</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$rii</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$file</span><span class="token operator">-&gt;</span><span class="token function">isDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token operator">-&gt;</span><span class="token function">getPathname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$ext</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span> <span class="token constant">PATHINFO_EXTENSION</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;md&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Removeing <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$path</span><span class="token punctuation">}</span></span>\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;.DS_Store&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Removeing <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$path</span><span class="token punctuation">}</span></span>\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">REMOVED_FILES</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Removeing <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$path</span><span class="token punctuation">}</span></span>\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;php&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Minifying <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$path</span><span class="token punctuation">}</span></span>\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span> <span class="token function">php_strip_whitespace</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;json&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">in_array</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;composer.lock&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Minifying <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$path</span><span class="token punctuation">}</span></span>\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>\u4FDD\u5B58\u4E0A\u9762\u4EE3\u7801\u4E3A <code>minify.php</code> \u7136\u540E\u6267\u884C\u4E0B\u65B9\u4EE3\u7801\u538B\u7F29\u6574\u4E2A\u9879\u76EE\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php minify.php my-project
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u6253\u5305\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#\u6253\u5305\u4F9D\u8D56" aria-hidden="true">#</a> \u6253\u5305\u4F9D\u8D56</h2>`,14),k=n("\u7B2C\u4E00\u6B21\u4F7F\u7528\u9700\u8981\u5148\u5B89\u88C5 "),b={href:"https://github.com/clue/phar-composer",target:"_blank",rel:"noopener noreferrer"},d=n("phar-composer"),h=n(" \u5DE5\u5177\uFF1A"),m=a(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> -JOL https://clue.engineering/phar-composer-latest.phar
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5F00\u59CB\u6253\u5305\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php phar-composer.phar build my-project
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u6253\u5305\u5B8C\u6210\u540E\u4F1A\u5728\u5F53\u524D\u76EE\u5F55\u751F\u6210\u4E00\u4E2A\u4E0E\u76EE\u5F55\u540D\u76F8\u540C\u7684 <code>.phar</code> \u6587\u4EF6\uFF0C\u8FD9\u91CC\u662F <code>my-project.phar</code>\u3002</p><h2 id="\u4F7F\u7528-phar" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-phar" aria-hidden="true">#</a> \u4F7F\u7528 Phar</h2><p>\u6700\u7EC8\u6253\u5305\u51FA\u7684 Phar \u6587\u4EF6\u5728 PHP \u4E2D\u76F4\u63A5 <code>require</code> \u5373\u53EF\u4F7F\u7528\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">require</span> <span class="token string single-quoted-string">&#39;my-project.phar&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$client</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified">GuzzleHttp<span class="token punctuation">\\</span>Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$client</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,7);function g(v,f){const p=t("OutboundLink");return l(),e(c,null,[r,s("p",null,[k,s("a",b,[d,o(p)]),h]),m],64)}var w=u(i,[["render",g]]);export{w as default};
